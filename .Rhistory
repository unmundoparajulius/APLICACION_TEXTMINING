#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
########################## DICCIONARIO DE SENTIMIENTOS ###################
sentimientosyemociones <- read.csv("dataset/nrc_03.csv", sep = ";",
fileEncoding = "latin1")
head(sentimientosyemociones)
dic_nrc <- ejemplo05_token %>% inner_join(sentimientosyemociones)
dic_nrc %>% count(word,Sentimientos, sort = TRUE)
ejemplo05_token
library(shinydashboard)
library(shiny)
library(sqldf)
library(plotly)
library(ggplot2)       # PARA GRAFICOS
library(syuzhet)       # MANIPULACION DE TEXTO: ANALISIS DE SENTIMIENTO
library(dplyr)         # MANIPULACION DE DATAFRAMES
library(RColorBrewer)  # PALETA DE COLORES
library(wordcloud)     # GRAFICOS - NUBE DE PALABRAS
library(wordcloud2)    # GRAFICOS - NUBE DE PALABRAS
library(tidyr)         # LIMPIEZA DE DATOS
library(tm)            # MANIPULACION DE TEXTO
library(tidytext)      # LIMPIEZA DE TEXTO
library(stopwords)     # ELIMINA PALABRAS INTRANDESCENTES
library(textdata)
library(reshape2)
library(xtable)
library(rsconnect)
library(reticulate)
#----------------- EJEMPLO ----------------------------------#
ejemplo05 <- read.csv("dataset/Comentario_Estudiantes_POO.csv", sep=";")
head(ejemplo05)
stop_words_es <- stopwords(language = "es", source = "snowball")
ejemplo05_token <- unnest_tokens(tbl=ejemplo05,
output = "word",
input = "Comentarios",
token = "words") %>%
filter(!(word %in% stop_words_es))
head(ejemplo05_token) %>% count(word, sort= T)
ejemplo05_token
########################## DICCIONARIO DE SENTIMIENTOS ###################
sentimientosyemociones <- read.csv("dataset/nrc_03.csv", sep = ";",
fileEncoding = "latin1")
head(sentimientosyemociones)
dic_nrc <- ejemplo05_token %>% inner_join(sentimientosyemociones)
dic_nrc %>% count(word,Sentimientos, sort = TRUE)
####################### EMOCIONES ################################
dic_nrc %>%
#filter(Sentimientos!="positivo" & Sentimientos!="desagrado" & Sentimientos!="sorpresa"
#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
dic_nrc %>% count(Sentimientos)
dic_nrc$n
length(dic_nrc$Sentimientos)
dplyr::filter(dic_nrc, Sentimientos == "miedo")
dplyr::filter(dic_nrc$Sentimientos == "miedo")
dplyr::filter(dic_nrc, Sentimientos == "miedo")
data.frame(table(nrc$Sentimientos))
data.frame(table(dic_nrc$Sentimientos))
dic_nrc %>% count(Sentimientos == "miedo") #Opcion 1
count(dic_nrc,Sentimeintos == "miedo")
count(dic_nrc,Sentimientos == "miedo")
a <- count(dic_nrc,Sentimientos == "miedo")
a
a <- count(dic_nrc,Sentimientos)
a
ddply(dic_nrc, .(freq), nrow)
library(plyr)
ddply(dic_nrc, .(freq), nrow)
a <- count(dic_nrc,Sentimientos)
a
####################### EMOCIONES ################################
dic_nrc %>%
#filter(Sentimientos!="positivo" & Sentimientos!="desagrado" & Sentimientos!="sorpresa"
#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
dic_nrc %>% count(Sentimientos == "miedo") #Opcion 1
########################## DICCIONARIO DE SENTIMIENTOS ###################
sentimientosyemociones <- read.csv("dataset/nrc_03.csv", sep = ";",
fileEncoding = "latin1")
head(sentimientosyemociones)
dic_nrc <- ejemplo05_token %>% inner_join(sentimientosyemociones)
dic_nrc %>% count(word,Sentimientos, sort = TRUE)
####################### EMOCIONES ################################
dic_nrc %>%
#filter(Sentimientos!="positivo" & Sentimientos!="desagrado" & Sentimientos!="sorpresa"
#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
#----------------- EJEMPLO ----------------------------------#
ejemplo05 <- read.csv("dataset/Comentario_Estudiantes_POO.csv", sep=";")
head(ejemplo05)
stop_words_es <- stopwords(language = "es", source = "snowball")
ejemplo05_token <- unnest_tokens(tbl=ejemplo05,
output = "word",
input = "Comentarios",
token = "words") %>%
filter(!(word %in% stop_words_es))
head(ejemplo05_token) %>% count(word, sort= T)
library(shinydashboard)
library(shiny)
library(sqldf)
library(plotly)
library(ggplot2)       # PARA GRAFICOS
library(syuzhet)       # MANIPULACION DE TEXTO: ANALISIS DE SENTIMIENTO
library(dplyr)         # MANIPULACION DE DATAFRAMES
library(RColorBrewer)  # PALETA DE COLORES
library(wordcloud)     # GRAFICOS - NUBE DE PALABRAS
library(wordcloud2)    # GRAFICOS - NUBE DE PALABRAS
library(tidyr)         # LIMPIEZA DE DATOS
library(tm)            # MANIPULACION DE TEXTO
library(tidytext)      # LIMPIEZA DE TEXTO
library(stopwords)     # ELIMINA PALABRAS INTRANDESCENTES
library(textdata)
library(reshape2)
library(xtable)
library(rsconnect)
library(reticulate)
#----------------- EJEMPLO ----------------------------------#
ejemplo05 <- read.csv("dataset/Comentario_Estudiantes_POO.csv", sep=";")
head(ejemplo05)
stop_words_es <- stopwords(language = "es", source = "snowball")
ejemplo05_token <- unnest_tokens(tbl=ejemplo05,
output = "word",
input = "Comentarios",
token = "words") %>%
filter(!(word %in% stop_words_es))
head(ejemplo05_token) %>% count(word, sort= T)
########################## DICCIONARIO DE SENTIMIENTOS ###################
sentimientosyemociones <- read.csv("dataset/nrc_03.csv", sep = ";",
fileEncoding = "latin1")
head(sentimientosyemociones)
dic_nrc <- ejemplo05_token %>% inner_join(sentimientosyemociones)
dic_nrc %>% count(word,Sentimientos, sort = TRUE)
####################### EMOCIONES ################################
dic_nrc %>%
#filter(Sentimientos!="positivo" & Sentimientos!="desagrado" & Sentimientos!="sorpresa"
#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
a <- count(dic_nrc,Sentimientos)
a
min(dic_nrc$freq)
min(dic_nrc$Sentimientos)
max(dic_nrc$Sentimientos)
min(dic_nrc$word)
min(dic_nrc$n)
min(dic_nrc$Sentimientos)
Summary(dic_nrc$Sentimientos)
length(dic_nrc$Sentimientos)
length(dic_nrc, Sentimientos == "alegria")
length(dic_nrc, Sentimientos == "alegría")
length(dic_nrc$Sentimientos == "alegría")
dplyr::filter(dic_nrc, Sentimientos == "alegría")
b <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
b
NROW(b)
resul <- b/length(dic_nrc$Sentimientos)
b <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
b
resul <- NROW(b)*length(dic_nrc$Sentimientos)
resul
resul <- (NROW(b)/length(dic_nrc$Sentimientos))*100
resul
resul <- NROW(b)/length(dic_nrc$Sentimientos)
resul
dic_nrc %>% count(Sentimientos == "miedo") #Opcion 1
a <- count(dic_nrc,Sentimientos)
a
cant_sent <- length(dic_nrc$Sentimientos)
cant_sent
tabla_sent <- count(dic_nrc,Sentimientos)
tabla_sent
ddply(dic_nrc, .(freq), nrow)
cant_sent <- length(dic_nrc$Sentimientos)
cant_sent
select(dic_nrc, Sentimientos)
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
ale
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
NROW(ale)
resul_ale <- NROW(ale)/cant_sent
resul_ale
#Filtrado de filas
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría", Sentimientos == "miedo")
ale
#Filtrado de filas
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría" && "miedo")
#Filtrado de filas
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
ale
mie <- dplyr::filter(dic_nrc, Sentimientos == "miedo")
mie
NROW(ale+mie)
sum <- NROW(ale) + NROW(mie)
sum
dic_nrc %>% count(Sentimientos == "miedo") #Opcion 1
#Tabla de sentimientos
tabla_sent <- count(dic_nrc,Sentimientos)
tabla_sent
#Cantidad de sentimientos
cant_sent <- length(dic_nrc$Sentimientos)
cant_sent
#Filtrado de filas
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
ale
mie <- dplyr::filter(dic_nrc, Sentimientos == "confianza")
mie
conf <- dplyr::filter(dic_nrc, Sentimientos == "confianza")
conf
#Suma de filas
sumatoria_amor <- NROW(ale) + NROW(conf)
sumatoria_amor
#Porcentaje de la emocion positiva amor
resultado_amor <- (sumatoria_amor/cant_sent)*100
resultado_amor
#filtrado de filas
emo_ira <- dplyr::filter(dic_nrc, Sentimientos == "ira")
emo_ira
emo_anticip <- dplyr::filter(dic_nrc, Sentimientos == "anticipacion")
emo_anticip
#Suma de filas
sumatoria_agresion <- NROW(emo_ira) + NROW(emo_anticip)
sumatoria_agresion
#Porcentaje de la emocion negativa agresion
resultado_agresion <- (sumatoria_agresion/cant_sent)*100
resultado_agresion
#filtrado de filas
emo_miedo <- dplyr::filter(dic_nrc, Sentimientos == "miedo")
emo_miedo
#Suma de filas
sumatoria_ansiedad <- NROW(emo_miedo) + NROW(emo_anticip)
sumatoria_ansiedad
#Porcentaje de la emocion negativa agresion
resultado_ansiedad <- (sumatoria_ansiedad/cant_sent)*100
resultado_ansiedad
#filtrado de filas
emo_tristeza <- dplyr::filter(dic_nrc, Sentimientos == "tristeza")
emo_tristeza
#Suma de filas
sumatoria_desesperacion <- NROW(emo_miedo) + NROW(emo_tristeza)
sumatoria_desesperacion
#Porcentaje de la emocion negativa agresion
resultado_desesperacion <- (sumatoria_desesperacion/cant_sent)*100
resultado_desesperacion
#Suma de filas
sumatoria_envidia <- NROW(emo_tristeza) + NROW(emo_ira)
sumatoria_envidia
#Porcentaje de la emocion negativa envidia
resultado_envidia <- (sumatoria_envidia/cant_sent)*100
resultado_envidia
resultado_otro <- 100 - (resultado_amor+resultado_agresion+resultado_ansiedad+
resultado_desesperacion+resultado_envidia)
resultado_otro
#Resumen de tablas
Emociones <- c("Amor", "Agresión", "Ansiedad", "Desesperación", "Envidia", "Otros")
Tipo <- c("Positiva","Negativa", "Negativa", "Negativa", "Negativa", "Pos y/o Neg")
Porcentaje <- c(resultado_amor,resultado_agresion, resultado_ansiedad,
resultado_desesperacion, resultado_envidia, resultado_otro)
Autoconocimiento <- as.data.frame(cbind(Emociones, Tipo, Porcentaje))
Autoconocimiento
#Tabla de sentimientos
tabla_sent <- count(dic_nrc,Sentimientos)
tabla_sent
cant_sent
ale
conf
sumatoria_amor
resultado_amor
####################### EMOCIONES ################################
dic_nrc %>%
#filter(Sentimientos!="positivo" & Sentimientos!="desagrado" & Sentimientos!="sorpresa"
#       & Sentimientos!="ira" & Sentimientos!="tristeza"
#     & Sentimientos!="confianza" & Sentimientos!="alegría" & Sentimientos!="negativo") %>%
filter(Sentimientos!="positivo"
& Sentimientos!="negativo") %>%
count(word,Sentimientos,sort=TRUE) %>%
group_by(Sentimientos) %>%
top_n(10) %>%
ungroup() %>%
mutate(word=reorder(word,n)) %>%
ggplot(aes(word,n,fill=Sentimientos))+
geom_col(show.legend = FALSE) +
geom_text(aes(label=n), hjust= 0) +
facet_wrap(~Sentimientos,scales = "free_y")+
coord_flip() +
xlab(NULL)
emo_ira
emo_anticip
sumatoria_agresion
resultado_agresion
resultado_otro
#Resumen de tablas
Emociones <- c("Amor", "Agresión", "Ansiedad", "Desesperación", "Envidia", "Otros")
Tipo <- c("Positiva","Negativa", "Negativa", "Negativa", "Negativa", "Pos y/o Neg")
Porcentaje <- c(resultado_amor,resultado_agresion, resultado_ansiedad,
resultado_desesperacion, resultado_envidia, resultado_otro)
Autoconocimiento <- as.data.frame(cbind(Emociones, Tipo, Porcentaje))
Autoconocimiento
#Porcentaje de la emocion positiva amor
resultado_amor <- (sumatoria_amor/cant_sent)*100
porcentuales(resultado_amor,precisión=0.01)
#Porcentaje de la emocion positiva amor
resultado_amor <- round((sumatoria_amor/cant_sent))*100
resultado_amor
#Porcentaje de la emocion positiva amor
resultado_amor <- round((sumatoria_amor/cant_sent),4)*100
resultado_amor
#Porcentaje de la emocion negativa agresion
resultado_agresion <- round((sumatoria_agresion/cant_sent),4)*100
resultado_agresion
#Porcentaje de la emocion negativa agresion
resultado_ansiedad <- round((sumatoria_ansiedad/cant_sent),4)*100
resultado_ansiedad
#Porcentaje de la emocion negativa desesperacion
resultado_desesperacion <- round((sumatoria_desesperacion/cant_sent),4)*100
resultado_desesperacion
#Porcentaje de la emocion negativa envidia
resultado_envidia <- round((sumatoria_envidia/cant_sent),4)*100
resultado_envidia
resultado_otro <- 100 - (resultado_amor+resultado_agresion+resultado_ansiedad+
resultado_desesperacion+resultado_envidia)
resultado_otro
#Resumen de tablas
Emociones <- c("Amor", "Agresión", "Ansiedad", "Desesperación", "Envidia", "Otros")
Tipo <- c("Positiva","Negativa", "Negativa", "Negativa", "Negativa", "Pos y/o Neg")
Porcentaje <- c(resultado_amor,resultado_agresion, resultado_ansiedad,
resultado_desesperacion, resultado_envidia, resultado_otro)
Autoconocimiento <- as.data.frame(cbind(Emociones, Tipo, Porcentaje))
Autoconocimiento
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$cloud <- renderPlot({
grafica_cloud<- df_token %>%
count(word) %>%
with(wordcloud(words = word, freq = n, scale = c(3,1),
max.words=250, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2")))
return(grafica_cloud)
grafica_cloud
grafica_cloud
df_token
df_token
df_token
return(grafica_cloud)
grafica_cloud<- df_token %>%
count(word) %>%
with(wordcloud(words = word, freq = n, scale = c(3,1),
max.words=250, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2")))
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
cant_sent <- length(dic_nrc$Sentimientos)
return(cant_sent)
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
ale
cant_sent <- lenght(dic_nrc$Sentimientos) %>% filter(dic_nrc, Sentimientos == "alegría")
cant_sent <- length(dic_nrc$Sentimientos) %>% filter(dic_nrc, Sentimientos == "alegría")
cant_sent <- filter(dic_nrc, Sentimientos == "alegría")
cant_sent
ale <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
ale
cant_sent <- filter(dic_nrc, Sentimientos == "alegría")
cant_sent
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
############################# VERGUENZA ##########################
emo_miedos <- dplyr::filter(dic_nrc, Sentimientos == "miedo")
emo_dg <- dplyr::filter(dic_nrc, Sentimientos == "desagrado")
suma_verguenza <- nrow(emo_miedos) + nrow(emo_dg)
res_verguenza <- round((suma_verguenza/cant_sentimiento),4)*100
res_desprecio <- round((suma_desprecio/cant_sentimiento),4)*100
#RESUMENES
tabla_sentimiento <- count(dic_nrc,Sentimientos)
cant_sentimiento <- length(dic_nrc$Sentimientos)
ver_sol <- round((suma_02/cant_sentimiento),4)*100
################################ AMOR #############################
fel <- dplyr::filter(dic_nrc, Sentimientos == "alegría")
co <- dplyr::filter(dic_nrc, Sentimientos == "confianza")
suma_02 <- nrow(fel) + nrow(co)
ver_sol <- round((suma_02/cant_sentimiento),4)*100
############################## DESPRECIO ##########################
emo_desa <- dplyr::filter(dic_nrc, Sentimientos == "desagrado")
emo_irases <- dplyr::filter(dic_nrc, Sentimientos == "ira")
suma_desprecio <- nrow(emo_desa) + nrow(emo_irases)
res_desprecio <- round((suma_desprecio/cant_sentimiento),4)*100
############################# VERGUENZA ##########################
emo_miedos <- dplyr::filter(dic_nrc, Sentimientos == "miedo")
emo_dg <- dplyr::filter(dic_nrc, Sentimientos == "desagrado")
suma_verguenza <- nrow(emo_miedos) + nrow(emo_dg)
res_verguenza <- round((suma_verguenza/cant_sentimiento),4)*100
############################### ANSIEDAD #########################
emo_miedi <- dplyr::filter(dic_nrc, Sentimientos == "miedo")
emo_anti <- dplyr::filter(dic_nrc, Sentimientos == "anticipacion")
suma_ansied <- nrow(emo_miedi) + nrow(emo_anti)
res_ansied <- round((suma_ansied/cant_sentimiento),4)*100
############################## OTRO 02 #############################
result_otro <- 100(ver_sol+res_curiosidad+res_desprecio+
res_verguenza+res_ansied)
############################## OTRO 02 #############################
result_otro <- 100-(ver_sol+res_curiosidad+res_desprecio+
res_verguenza+res_ansied)
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
